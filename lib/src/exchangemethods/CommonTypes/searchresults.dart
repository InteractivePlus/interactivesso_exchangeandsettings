import 'package:interactiveplus_shared_dart/interactiveplus_shared_dart.dart';
import 'package:interactivesso_datatypes/interactivesso_datatypes.dart';
import 'package:interactivesso_exchangeandsettings/src/exchangemethods/CommonTypes/returnedappinfo.dart';
import 'package:interactivesso_exchangeandsettings/src/exchangemethods/CommonTypes/returnedoauthtoken.dart';
import 'package:interactivesso_exchangeandsettings/src/exchangemethods/CommonTypes/returneduserentity.dart';
import 'package:interactivesso_exchangeandsettings/src/interface/exchangeformat.dart';

typedef ExchangeSearchAPPResult = SearchResult<ExchangedReturnedAppInfo>;
Map<String,dynamic> exchangeSearchAPPResultStaticSerialize(ExchangeSearchAPPResult rst) => rst.toJson();
ExchangeSearchAPPResult exchangeSearchAPPResultStaticDeserialize(Map<String,dynamic> serialized) => SearchResult.fromJson<ExchangedReturnedAppInfo>(serialized, ExchangedReturnedAppInfo.staticDeserialize);
final exchangeSearchAPPResultStaticSerializeWithSettings = ssoConvertToExchangeFormatFunc(exchangeSearchAPPResultStaticSerialize);
final exchangeSearchAPPResultStaticDeserializeWithSettings = ssoConvertToExchangeFormatFunc(exchangeSearchAPPResultStaticDeserialize);

typedef ExchangeSearchSimpleUserResult = SearchResult<ExchangedSimpleUserInfo>;
Map<String,dynamic> exchangeSearchSimpleUserResultStaticSerialize(ExchangeSearchSimpleUserResult rst) => rst.toJson();
ExchangeSearchSimpleUserResult exchangeSearchSimpleUserResultStaticDeserialize(Map<String,dynamic> serialized) => SearchResult.fromJson<ExchangedSimpleUserInfo>(serialized, ExchangedSimpleUserInfo.fromJson);
final exchangeSearchSimpleUserResultStaticSerializeWithSettings = ssoConvertToExchangeFormatFunc(exchangeSearchSimpleUserResultStaticSerialize);
final exchangeSearchSimpleUserResultStaticDeserializeWithSettings = ssoConvertToExchangeFormatFunc(exchangeSearchSimpleUserResultStaticDeserialize);

typedef ExchangeSearchOAuthTokenResult = SearchResult<ExchangedReturnedOAuthToken>;
Map<String,dynamic> exchangeSearchOAuthTokenResultStaticSerialize(ExchangeSearchOAuthTokenResult rst) => rst.toJson();
ExchangeSearchOAuthTokenResult exchangeSearchOAuthTokenResultStaticDeserialize(Map<String,dynamic> serialized) => SearchResult.fromJson<ExchangedReturnedOAuthToken>(serialized, ExchangedReturnedOAuthToken.fromJson);
final exchangeSearchOAuthTokenResultStaticSerializeWithSettings = ssoConvertToExchangeFormatFunc(exchangeSearchOAuthTokenResultStaticSerialize);
final exchangeSearchOAuthTokenResultStaticDeserializeWithSettings = ssoConvertToExchangeFormatFunc(exchangeSearchOAuthTokenResultStaticDeserialize);

typedef ExchangeSearchAvatarResult = SearchResult<AvatarInfo>;
Map<String,dynamic> exchangeSearchAvatarResultStaticSerialize(ExchangeSearchAvatarResult rst) => rst.toJson();
ExchangeSearchAvatarResult exchangeSearchAvatarResultStaticDeserialize(Map<String,dynamic> serialized) => SearchResult.fromJson<AvatarInfo>(serialized, AvatarInfo.fromJson);
final exchangeSearchAvatarResultStaticSerializeWithSettings = ssoConvertToExchangeFormatFunc(exchangeSearchAvatarResultStaticSerialize);
final exchangeSearchAvatarResultStaticDeserializeWithSettings = ssoConvertToExchangeFormatFunc(exchangeSearchAvatarResultStaticDeserialize);

typedef ExchangeSearchAuthorizationRecordsResult = SearchResult<ExchangedReturnedOAuthUserAuthorization>;
Map<String,dynamic> exchangeSearchAuthorizationRecordsResultStaticSerialize(ExchangeSearchAuthorizationRecordsResult rst) => rst.toJson();
ExchangeSearchAuthorizationRecordsResult exchangeSearchAuthorizationRecordsResultStaticDeserialize(Map<String,dynamic> serialized) => SearchResult.fromJson<ExchangedReturnedOAuthUserAuthorization>(serialized, ExchangedReturnedOAuthUserAuthorization.fromJson);
final exchangeSearchAuthorizationRecordsResultStaticSerializeWithSettings = ssoConvertToExchangeFormatFunc(exchangeSearchAuthorizationRecordsResultStaticSerialize);
final exchangeSearchAuthorizationRecordsResultStaticDeserializeWithSettings = ssoConvertToExchangeFormatFunc(exchangeSearchAuthorizationRecordsResultStaticDeserialize);
